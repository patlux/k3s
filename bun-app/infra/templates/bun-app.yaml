apiVersion: apps/v1
kind: Deployment
metadata:
  name: bun-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bun-app
  template:
    metadata:
      labels:
        app: bun-app
      annotations:
        forceRestart: "{{ .Values.forceRestart }}"
    spec:
      containers:
        - name: bun-app
          image: localhost:5000/k3s-bun-app
          ports:
          - containerPort: 3000
          env:
          - name: DATABASE_URL
            value: postgres://{{ $.Values.global.postgresql.auth.username }}:{{ $.Values.global.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ $.Values.global.postgresql.auth.database }}

---
apiVersion: v1
kind: Service
metadata:
  name: bun-app-service
spec: 
  selector:
    app: bun-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---    
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bun-app-http
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  ingressClassName: traefik
  rules:
    - host: bun-app.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bun-app-service
                port:
                  number: 3000
